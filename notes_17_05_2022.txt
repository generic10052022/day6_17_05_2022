/* public class Resource{

 public static int getMonth(String month){

   switch(month){
    case "Jan" : return 1;
    case "Feb" : return 2;
    default : return 0;

    }
 }

} */

 public class Resource{

 public static int getMonth(String month){
     int monthNumber=-1;
   switch(month){
    case "Jan" : monthNumber=1;
                 break;
    case "Feb" : monthNumber=2;
                 break;
    default :    monthNumber=0;

    }
   return monthNumber;
 }

} 

public ResourceMain{
   public static void main(String args[]){
    String monthName="Jan";
    //Resource res=new Resource();
    int monthNumber=Resource.getMonth(monthName);
    System.out.println(monthNumber);

   }

 }  
-----------------------------------------------------------------------------------------------------

Q We have seen how we can create an array of String objects. Is it possible to create objects for the userdefined classes like Employee/Student/Book etc?
Ans Yes .


 public class Employee {
   private int id;
   private String name;
   private String cityNames[];

   // setters/getters
 }

 public class EmployeeMain {
   public static void main(String args[]) {

  }
}
------------------------------------------------------------------------------------
Enter the details for two Employees 

 public class Employee {
   private int id;
   private String name;
   private String cityNames[];

   // setters/getters
 }

 public class EmployeeMain {
   public static void main(String args[]) {
    Employee emp1=new Employee();
    Employee emp2=new Employee();
  }
}
----------------------------------------------------------------------------------------------

 public class Employee {
   private int id;
   private String name;
   private String cityNames[];

   // setters/getters
 }

import java.util.Scanner;

public class EmployeeMain {
   public static void main(String args[]) {
   Employee employees[]=new Employee[2];  // We have created two reference variables to store two objects
   Scanner scan=new Scanner(System.in);
   String cityNames[]=new String[2];
   // of employee class 
   // int num[]=new int[2];
   // String str[]=new String[2];
   for(int i=0;i<employees.length;i++)
   {
	   System.out.println("Enter the id for the employee");
	   //int id=scan.nextInt();
	   // employees[i].setId(id);
	   employees[i].setId(scan.nextInt());
	  
	   System.out.println("Enter the name");
	   employees[i].setName(scan.next());
	   for(int j=0;j<cityNames.length;j++)
	   {
		   System.out.println("Enter the city name");
		   cityNames[j]=scan.next();
	   }
       employees[i].setCityNames(cityNames);
   
   }
   
  
  }
}


[ Enter the id for the employee
1
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Employee.setId(int)" because "employees[i]" is null
	at EmployeeMain.main(EmployeeMain.java:16)
]
-----------------------------------------------------------
The correct code:----

public class Employee {
   private int id;
   private String name;
   private String cityNames[];
public int getId() {
	return id;
}
public void setId(int id) {
	this.id = id;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String[] getCityNames() {
	return cityNames;
}
public void setCityNames(String[] cityNames) {
	this.cityNames = cityNames;
}

   // setters/getters
 }


import java.util.Scanner;

public class EmployeeMain {
   public static void main(String args[]) {
   Employee employees[]=new Employee[2];  // We have created two reference variables to store two objects
   Scanner scan=new Scanner(System.in);
   String cityNames[]=new String[2];
   // of employee class 
   // int num[]=new int[2];
   // String str[]=new String[2];
   for(int i=0;i<employees.length;i++)
   {
	   employees[i]=new Employee();
	   System.out.println("Enter the id for the employee");
	   //int id=scan.nextInt();
	   // employees[i].setId(id);
	   employees[i].setId(scan.nextInt());
	  
	   System.out.println("Enter the name");
	   employees[i].setName(scan.next());
	   for(int j=0;j<cityNames.length;j++)
	   {
		   System.out.println("Enter the city name");
		   cityNames[j]=scan.next();
	   }
       employees[i].setCityNames(cityNames);
   
   }
   for(Employee emp : employees)
   {
	   System.out.println(emp.getId());
	   System.out.println(emp.getName());
	   //System.out.println(emp.getCityNames());
       cityNames=emp.getCityNames();
       for(String cityName : cityNames)
       {
    	   System.out.println(cityName);
       }
   }
   
   
   
  
  }
}


-------------------------------------------------------------
Student class with 2 student objects,
------------------------------------------------------------------------